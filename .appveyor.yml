build: false
version: "{branch}-{build}"

image:
  - Visual Studio 2013
  - Visual Studio 2015

environment:
  BFG_SKIPPED_TESTS: fortran objc scala
  BACKENDS: ninja make msbuild
  GNOME_BASE: https://ftp.gnome.org/pub/gnome/binaries/win32
  PYTHON_PATH: C:\Python37
  CPPFLAGS: /WX /IC:\projects\bfg9000\include
  LIBRARY_PATH: C:\projects\bfg9000\lib

for:
  - matrix:
      only:
        - image: Visual Studio 2013
    environment:
      VS: C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat
      BOOST_INCLUDEDIR: C:\Libraries\boost_1_58_0
      BOOST_LIBRARYDIR: C:\Libraries\boost_1_58_0\lib32-msvc-12.0
      QT_ROOT: C:\Qt\5.8\msvc2013
      LIBOGG: libogg-1.3.2
      LIBOGG_VS: VS2010
  - matrix:
      only:
        - image: Visual Studio 2015
    environment:
      VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      BOOST_INCLUDEDIR: C:\Libraries\boost_1_63_0
      BOOST_LIBRARYDIR: C:\Libraries\boost_1_63_0\lib32-msvc-14.0
      QT_ROOT: C:\Qt\5.11.3\msvc2015
      LIBOGG: libogg-1.3.3
      LIBOGG_VS: VS2015

cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

install:
  - cinst gnuwin32-coreutils.portable make ninja winflexbison3

  # Fetch and install pkg-config.
  - curl -LO %GNOME_BASE%/dependencies/pkg-config_0.26-1_win32.zip
  - curl -LO %GNOME_BASE%/glib/2.28/glib_2.28.8-1_win32.zip
  - curl -LO %GNOME_BASE%/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
  - 7z x -y pkg-config_0.26-1_win32.zip -oC:\pkg-config > nul
  - 7z x -y glib_2.28.8-1_win32.zip -oC:\pkg-config > nul
  - 7z x -y gettext-runtime_0.18.1.1-2_win32.zip -oC:\pkg-config > nul
  - set PKG_CONFIG=C:\pkg-config\bin\pkg-config.exe

  # Build and install libogg.
  - curl -LO http://downloads.xiph.org/releases/ogg/%LIBOGG%.zip
  - 7z x -y %LIBOGG%.zip > nul
  - >
    msbuild %LIBOGG%\win32\%LIBOGG_VS%\libogg_dynamic.sln /p:Platform=Win32
    /p:Configuration=Release
  - mkdir lib
  - set LIBOGG_BUILDDIR=%LIBOGG%\win32\%LIBOGG_VS%\Win32\Release
  - copy %LIBOGG_BUILDDIR%\libogg.lib lib\ogg.lib
  - copy %LIBOGG_BUILDDIR%\libogg.dll lib\libogg.dll
  - robocopy %LIBOGG%\include include *.h /E & exit 0

  # Set up paths and other necessary bits for the compiler.
  - call "%VS%" x86
  - set PATH=%QT_ROOT%\bin;%PATH%
  - set CPATH=%QT_ROOT%\include;%QT_ROOT%\include\QtWidgets;%QT_ROOT%\include\QtQml;%CPATH%
  - set LIBRARY_PATH=%QT_ROOT%\lib;%LIBRARY_PATH%
  - set PATH=%PYTHON_PATH%;%PYTHON_PATH%\Scripts;%LIBRARY_PATH%;%PATH%
build_script:
  - git clone https://github.com/jimporter/mopack.git
  - cd mopack && git checkout bfbfd3867b41983dd0227b98e4d45bfd827987b5 && cd ..
  - pip install ./mopack .[test]
test_script:
  - python setup.py coverage -q
on_success:
  - coverage xml
  - set PATH=C:\Program Files\Git\bin;%PATH%
  - curl -s https://codecov.io/bash | bash -s -- -U "-s" -A "-s"
