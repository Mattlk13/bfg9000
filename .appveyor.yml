build: false
version: "{branch}-{build}"

image:
  - Visual Studio 2013
  - Visual Studio 2015

environment:
  BFG_SKIPPED_TESTS: fortran objc scala
  BACKENDS: ninja make msbuild
  GNOME_BASE: https://ftp.gnome.org/pub/gnome/binaries/win32
  PYTHON_PATH: C:\Python37
  CPPFLAGS: /WX /IC:\projects\bfg9000\include
  LIBRARY_PATH: C:\projects\bfg9000\lib

for:
  - matrix:
      only:
        - image: Visual Studio 2013
    environment:
      VS: C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat
      BOOST_INCLUDEDIR: C:\Libraries\boost_1_58_0
      BOOST_LIBRARYDIR: C:\Libraries\boost_1_58_0\lib32-msvc-12.0
      QT_ROOT: C:\Qt\5.8\msvc2013
      LIBOGG: libogg-1.3.2
      LIBOGG_VS: VS2010
  - matrix:
      only:
        - image: Visual Studio 2015
    environment:
      VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      BOOST_INCLUDEDIR: C:\Libraries\boost_1_63_0
      BOOST_LIBRARYDIR: C:\Libraries\boost_1_63_0\lib32-msvc-14.0
      QT_ROOT: C:\Qt\5.11.3\msvc2015
      LIBOGG: libogg-1.3.3
      LIBOGG_VS: VS2015

cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

install:
  - choco install gnuwin32-coreutils.portable make ninja winflexbison3

  # Fetch and install pkg-config.
  - curl -LO %GNOME_BASE%/dependencies/pkg-config_0.26-1_win32.zip
  - curl -LO %GNOME_BASE%/glib/2.28/glib_2.28.8-1_win32.zip
  - curl -LO %GNOME_BASE%/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
  - 7z x -y pkg-config_0.26-1_win32.zip -oC:\pkg-config > nul
  - 7z x -y glib_2.28.8-1_win32.zip -oC:\pkg-config > nul
  - 7z x -y gettext-runtime_0.18.1.1-2_win32.zip -oC:\pkg-config > nul
  - set PKG_CONFIG=C:\pkg-config\bin\pkg-config.exe

  # Build and install libogg.
  - curl -LO http://downloads.xiph.org/releases/ogg/%LIBOGG%.zip
  - 7z x -y %LIBOGG%.zip > nul
  - >
    msbuild %LIBOGG%\win32\%LIBOGG_VS%\libogg_dynamic.sln /p:Platform=Win32
    /p:Configuration=Release
  - mkdir lib
  - set LIBOGG_BUILDDIR=%LIBOGG%\win32\%LIBOGG_VS%\Win32\Release
  - copy %LIBOGG_BUILDDIR%\libogg.lib lib\ogg.lib
  - copy %LIBOGG_BUILDDIR%\libogg.dll lib\libogg.dll
  - robocopy %LIBOGG%\include include *.h /E & exit 0

  # Set up paths and other necessary bits for the compiler.
  - call "%VS%" x86
  - set PATH=%PYTHON_PATH%;%PYTHON_PATH%\Scripts;%LIBRARY_PATH%;%QT_ROOT%\bin;%PATH%
build_script:
  - pip install git+https://github.com/jimporter/mopack.git .[test]
test_script:
  - python setup.py coverage -q
on_success:
  # Fetch and verify codecov uploader.
  - curl -Os https://uploader.codecov.io/latest/windows/codecov.exe
  - curl -Os https://uploader.codecov.io/latest/windows/codecov.exe.SHA256SUM
  - curl -Os https://uploader.codecov.io/latest/windows/codecov.exe.SHA256SUM.sig
  - curl -Os https://keybase.io/codecovsecurity/pgp_keys.asc
  - gpg --import pgp_keys.asc
  - gpg --verify codecov.exe.SHA256SUM.sig codecov.exe.SHA256SUM
  # Fix the shasum file to use universal newlines.
  - sed -i "s/ codecov.exe/Ucodecov.exe/" codecov.exe.SHA256SUM
  - shasum -a 256 -c codecov.exe.SHA256SUM

  - coverage xml
  - .\codecov.exe -f coverage.xml
